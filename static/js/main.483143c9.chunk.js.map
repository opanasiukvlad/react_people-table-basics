{"version":3,"sources":["components/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PersonRow.tsx","api.ts","components/PeoplePage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","PersonLink","props","person","slug","sex","name","to","classNames","PersonRow","useParams","born","died","mother","motherName","father","fatherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","people","setPeople","peopleUploaded","setPeopleUploaded","hasError","setHasError","useEffect","data","catch","finally","peopleWithParents","useMemo","map","_","arr","find","length","Navbar","role","isActive","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.483143c9.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person\n}\n\nexport const PersonLink: React.FC<Props> = (props) => {\n  const {\n    person: {\n      slug,\n      sex,\n      name,\n    },\n  } = props;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonRow: React.FC<Props> = (props) => {\n  const {\n    person,\n  } = props;\n\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': slug === person.slug },\n      )}\n    >\n      <td>\n        <PersonLink\n          person={person}\n        />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother\n          ? <PersonLink person={person.mother} />\n          : person.motherName || '-'}\n      </td>\n      <td>\n        {person.father\n          ? <PersonLink person={person.father} />\n          : person.fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Loader } from './Loader';\nimport { PersonRow } from './PersonRow';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [peopleUploaded, setPeopleUploaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    setHasError(false);\n\n    getPeople()\n      .then((data) => (setPeople(data)))\n      .catch(() => setHasError(true))\n      .finally(() => setPeopleUploaded(true));\n  }, []);\n\n  const peopleWithParents = useMemo<Person[]>(() => (\n    people.map((person, _, arr) => ({\n      ...person,\n      mother: arr.find(mother => mother.name === person.motherName),\n      father: arr.find(father => father.name === person.fatherName),\n    }))\n  ), [people]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {!peopleUploaded && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!hasError && peopleUploaded && people.length < 1 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {peopleUploaded && (\n            <>\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {peopleWithParents.map(person => (\n                    <PersonRow\n                      person={person}\n                      key={person.slug}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => (\n              isActive\n                ? 'navbar-item has-background-grey-lighter'\n                : 'navbar-item')}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => (\n              isActive\n                ? 'navbar-item has-background-grey-lighter'\n                : 'navbar-item')}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <Navbar />\n\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}